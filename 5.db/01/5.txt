관계 데이터

관계 데이터 모델의 기본 개념
개념적 구조를 논리적 구조로 표현하는 논리적 데이터 모델
하나의 개체에 대한 데이터를 하나의 릴레이션(테이블)에 저장

열(column, attribute, field)
행(row, tuple, record)
+)레코드, 필드는 파일구조에서 사용하던 용어로, 행방향으로 나열된 데이터를 의미함.


관계 데이터 모델의 기본 용어
릴레이션(relation)
하나의 개체에 관한 데이터를 2차원 테이블의 구조로 저장한 것
파일 관리 시스템 관점에서 파일(file)에 대응

속성(attribute)
릴레이션의 열, 애트리뷰트
파일 관리 시스템 관점에서 필드(field)에 대응

투플(tuple)
릴레이션의 행
파일 관리 시스템 관점에서 레코드(record)에 대응

도메인(domain)
하나의 속성이 가질 수 있는 모든 값의 집합
속성 값을 입력 및 수정할 때 적합성 판단의 기준이 됨
일반적으로 속성의 특성을 고려한 데이터 타입으로 정의

널(null)
속성 값을 아직 모르거나 해당되는 값이 없음을 표현

차수(degree)
하나의 릴레이션에서 속성의 전체 개수

카디널리티(cardicality)
하나의 릴레이션에서 투플의 전체 개수
ex, 학교의 반 학생에 대한 릴레이션이 있을 때, 학생 수(tuple)가 몇명인지.

-----

릴레이션의 구성

릴레이션 스키마(relation schema)
릴레이션의 논리적 구조
릴레이션의 이름과 릴레이션에 포함된 모든 속성 이름으로 정의
예) 고객(고객아이디, 고객이름, 나이, 등급, 직업, 적립금)
릴레이션 내포(relation intension)라고도 함
정적인 특징이 있음

릴레이션 인스턴스(relation instance)
어느 한 시점에 릴레이션에 존재하는 투플들의 집합
릴레이션 외연(relation extension)이라고도 함
동적인 특징이 있음


데이터베이스의 구성

데이터베이스 스키마(database schema)
데이터베이스의 전체 구조
데이터베이스를 구성하는 릴레이션 스키마의 모음

데이터베이스 인스턴스(database instance)
데이터베이스를 구성하는 릴레이션 인스턴스의 모음


릴레이션의 특성
투플의 유일성
하나의 릴레이션에는 동일한 투플이 존재할 수 없다. (계정 생성시, 하나의 전화번호만으로 계정 생성 가능)

투플의 무순서
하나의 릴레이션에서 투플 사이의 순서는 무의미하다.(데이터베이스 안에서의 순서는 중요하지 않다. 꺼내오는 순서가 상황에 따라 달라지기 때문.)

속성의 무순서
하나의 릴레이션에서 속성 사이의 순서는 무의미하다.

속성의 원자성
속성 값으로 원자 값만 사용할 수 있다.(더이상 쪼개지지 않는 값을 사용, 아니면 더이상 쪼개려는 시도를 하지 않도로고 한다.)

----

키(key)
릴레이션에서 투플들을 유일하게 구별하는 속성 또는 속성들의 집합


키의 특성
유일성(uniqueness)
하나의 릴레이션에서 모든 투플은 서로 다른 키 값을 가져야 함
두개, 세개의 키를 합쳐서 다른 키들과 유일하게 구별이 된다면, 키에 해당한다. 하지만, 최소성에 의해서, 다수의 투플을 조합하진 않는다.

최소성(minimality)
꼭 필요한 최소한의 속성들로만 키를 구성함



키의 종류
슈퍼키(super key)
유일성을 만족하는 속성 또는 속성들의 집합, 행 전체가 슈퍼키가 될 수도 있다.
예) 고객 릴레이션의 슈퍼키 : 고객아이디, (고객아이디, 고객이름), (고객이름, 주소) 등

후보키(candidate key)
유일성과 최소성을 만족하는 속성 또는 속성들의 집합.
슈퍼키 중에서 기본키가 될 수 있는 키들의 집합
예) 고객 릴레이션의 후보키 : 고객아이디, (고객이름, 주소) 등

기본키(primary key)
후보키 중에서 기본적으로 사용하기 위해 선택한 키
->예를 들어, 주민번호같은거도 후보키에 해당될 순 있지만,
노출되면 안되는 데이터이기 때문에 기본키로는 잘 쓰이지 않는다.
+)변하는 데이터(ex, 적립금, 회원등급 등)은 당장은 유일성과 최소성을 만족할 순 있지만,
나중에도 만족할 지는 미지수이기 때문에, 키로써 사용하기엔 적합하지 않다.
예) 고객 릴레이션의 기본키 : 고객아이디

대체키(alternate key)
기본키로 선택되지 못한 후보키
예) 고객 릴레이션의 대체키 : (고객이름, 주소)


외래키(foreign key) - 외래키 자체는 중복을 허용한다. ex, 주문정보 릴레이션에서 고객정보 릴레이션을 참조할 때, 한 고객이 여러건의 주문을 넣을 수도 있으므로.
다른 릴레이션의 기본키를 참조하는 속성 또는 속성들의 집합
릴레이션들 간의 관계를 표현
참조하는 릴레이션 : 외래키를 가진 릴레이션
참조되는 릴레이션 : 외래키가 참조하는 기본키를 가진 릴레이션
+)ERD에서 '관계'에 해당한다.

+)외래키 속성과 그것이 참조하는 기본키 속성의 이름은 달라도 되지만 도메인은 같아야 한다.
+)하나의 릴레이션에는 외래키가 여러 개 존재할 수도 있고 외래키를 기본키로 사용할 수도 있다.

-----------

무결성
무결성 제약조건(integrity constraint)
데이터의 무결성을 보장하고 일관된 상태로 유지하기 위한 규칙
무결성 : 데이터를 결함이 없는 상태, 즉 정확하고 유효하게 유지하는 것


개체 무결성 제약조건(entity integrity constraint)
기본키를 구성하는 모든 속성은 널 값을 가질 수 없는 규칙
-프로그래밍 단계에서, null값을 입력받지 못하게 할수도 있고, db에서도 null값이 기본키로 저장되는 것을 막아준다.

참조 무결성 제약조건(referential integrity constraint)
외래키는 참조할 수 없는 값을 가질 수 없는 규칙
+)왜래키에 null값이 들어갈 수은 있다. 데이터가 꼭 들어가야 하는 것은 아니지만, 데이터를 넣을 때는 반드시 참조할 수 있는 값을 넣어야 한다.






































































