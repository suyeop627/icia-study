SQL(Structured Query Language) : 구조적 질의 언어


java나 mySQL같은거 설치하면, 프로그램을 어디서든 실행 할 수 있도록 환경변수 설정을 함.


설정 - 시스템 - 정보 - 고급 시스템 설정 - 환경변수 - 시스템변수 - path - 새로만들기 - 아래 경로추가


MySQL이 설치된 폴더내의 bin까지의 경로를 복사(탐색기 활용)
C:\Program Files\MySQL\MySQL Server 8.0\bin

employees.zip 압축해제

명령 프롬프트 실행 - 압축 해제한 폴더로 이동(cd명령)
cd\ c드라이브 이동
d: d드라이브 이동

위치 변경 후, 
mysql 입력 -> ERROR 1045 (28000) : Access denied for user 'ODBC'@'localhost' (using password: NO) 에러가 발생하면 정상임

mysql -u root -p -t < employees.sql  명령어 입력

설치시 입력한 비밀번호 입력 후 대기

 

+)workbench에서 root계정 - 관리자 계정

계정 생성 - connectionName 아무거나
Username - root : 관리자 계정
계정 만들고 Test Connection으로 확인해본 뒤 OK누르면 해당 계정 이용 가능

루트계정 사용시, 시스템에 저장된 데이터를 잘못건드릴 경우 중요한 데이터가 변경될 수도 있음
사용자 계정 만들어서 사용.




테이블 - 우클릭 - selectrows - 테이블 안의 내용을 볼 수 있다.



좌측, administration 탭 (참고로 이 탭은, 루트계정일때만 사용하는게 좋음)

MANAGEMENT - 
INSTANCE - 유지보수 관련 메뉴들
PERFORMANCE - 성능관련 메뉴들



schemas




text로 입력해서 계정 만들기 파일에 필기 확인

사용자를 위한 공간 생성

schemas에서 우클릭 -> create schemas ->
 db 이름 설정
defalt Charset -> UTF8로 변경
->apply ->앞 과정을 처리하기 위한 sql문 확인->finish

사용자 생성
users and privileges 메뉴 선택
->add account -> 
login Name dev01
limit to hosts matching이 아까 쿼리에서 적었던 %임

로그인탭에서 필요한 것들 작성하고, 
schema privileges탭으로 이동.
생성할 계정에게 줄 권한을 정해야한다.


add entry에서 할당할 db를 선택하거나, 모든 db를 주거나 등 선택


권한은 탭 하단의 체크박스로 한다.->sellect all 버튼으로 한번에 선택 가능.
sellect all을하면 grant option만 빼고 체크가 다 됨.
-> grant option은 권한 주는거라서 관리자만 가능.



여러개의 db 권한을 줄경우, 해당 계정에 add entry를 한번 더해서 db추가.


------


-- 여기에 작성하는 문장은 프로그램이 아니다.
-- 모든 문장은 개별적으로 실행되며, 함께 실행할지 개별적으로 실행할지는 선택
-- 한줄 주석
/*
	묶음 주석
*/
-- MySQL 사용자 추가    
    -- 사용자 그룹이나 개별 사용자를 위한 사용자 계정을 만들어서 권한을 주는 방식으로 사용.
    -- 루트계정 사용시, 시스템에 저장된 데이터를 잘못건드릴 경우 중요한 데이터가 변경될 수도 있음.
	-- SQL은 대소문자 구분은 안하지만, SQL문장은 대문자로 작성하는게 보기 좋다.
    
    -- 사용자를 위한 공간 생성
    -- CREATE DATABASE db명;
    CREATE DATABASE testDB;	
	
    -- 실행은 ctrl enter
    -- 새로고침하고나면 testdb가 schemas탭에 생성됨.
    
    
    -- 사용자 생성
    CREATE USER 'test01'@'%' IDENTIFIED BY '1234';
    -- 사용자가 어느 위치에서 접속하는지도 제한을 둔다. 어디에서건 상관없이 접속할 수 있게 하려면, @'%'작성. -> test01계정으로는 어디서든 접근 가능하다.
    -- IDENTIFIED BY '1234' <- 비밀번호 설정
    -- ctrl enter눌러서 상태가 초록색 체크표시면 명령어 실행 성공.x 표시면 실패
    
    -- 생성한 사용자에게 권한 부여(모든 권한 부여)
    GRANT ALL PRIVILEGES ON testdb.* TO 'test01';
    
    
    -- 새로 계정만들때, 기존에 적었던 sql을 수정해서 실행해도 되고, 새로 작성해도 된다.
    
    
    
    
    /*
SQL(Structured Query Language)
구조적 질의(질의) 언어

종류
1. DDL (Data Definition Language) - 정의어
CREATE : 생성(계정, 테이블, DB공간 등을 만들 때 사용) - 데이터적인 관점에서, 데이터베이스 자체에 없는걸 만드는 작업.
DROP : 삭제(계정, 테이블, DB공간 등) (CREATE로 만든건 DROP으로 삭제한다.(CREATE의 역))
ALTER : 수정(ALTER는 테이블같은거의 설정을 바꾸므로, 운영중에 ALTER를 사용하면, DB에 손상이나 이상이 발생할 수도 있다- 데이터가 있을 경우, ALTER로 수정 불가. 만약 데이터가 있다면, 다른 곳에 데이터를 옮겼다가 수정하고 다시 불러오는 식으로 작업해야한다.)



2. DML (Data Manipulation Language) - 조작어

INSERT : 데이터 삽입(Create) - 데이터적인 개념상 생성.?
SELECT : 데이터 선택(Read)
UPDATE : 데이터 수정(Update)
DELETE : 데이터 삭제(Delete)


3. DCL (Data Control Language) - 제어어

GRANT : 권한 부여 
REVOKE : 권한 취소


+)문장의 끝엔 세미콜론(문장을 인식하는 단위)
명령어의 문장마다 실행을 해줘야 한다. ctrl enter -> 커서가 위치한 라인 실행

작성해놓은 문장은 다른 문장에 영향을 미치지 않는다.


*/

-- 사용할 DB 공간 지정 명령어
-- schemas에 공간이 여러개라면, 먼저 지정해놔야 한다. -> 지정하면 해당 db가 볼드체로 바뀜.(또는, 탐색창에서 사용할 공간에 마우스 더블클릭)
USE devdb;


/*테이블 생성*/
/*
CREATE TABLE {테이블명} (
	col_name1 data_type [제약조건1 제약조건2 ...], 
    col_name2 data_type [제약조건1 제약조건2...],
    ......
    col_nameN data_type [제약조건1, 제약조건2...]
);
+)제약조건, 널값을 허용하는지 기본키인지 등의 조건 지정
+)컬럼간의 구분은 쉼표로 한다.

*/

CREATE TABLE testTbl(
t_id VARCHAR(20), 
t_nametesttbl VARCHAR(10),
t_age INT
);


-- 쿼리문은 대문자로, 개발자가 정한 이름을 소문자로 작성하는 것을 권장.
-- 굳이 강제는 아님
-- 실제 값들은 대소문자를 구분한다. 


CREATE TABLE member(
m_id VARCHAR(20),
m_pwd VARCHAR(20),
m_name VARCHAR(20),
m_age INT,
m_job VARCHAR(20),
m_grade VARCHAR(10),
m_point INT
);

CREATE TABLE comment(
c_no INT,
c_title VARCHAR(20),
c_content VARCHAR(100),
c_date INT
);


CREATE TABLE ordertable(
o_no INT,
o_amount INT,
o_location VARCHAR(50),
o_date DATE
);


CREATE TABLE product(
p_name VARCHAR(20),
p_amount INT,
p_price INT,
sp_date DATE,
sp_amount INT
);


CREATE TABLE supplier(
s_name VARCHAR(20),
s_phone VARCHAR(20),
s_location VARCHAR(20),
s_manager VARCHAR(20)
);




















