개념적 설계 – (STEP 3) E-R 다이어그램 작성
요구 사항 명세서를 개념적 스키마로 작성한 결과

설계 3 단계 : 논리적 설계
목적
DBMS에 적합한 논리적 스키마 설계
개념적 스키마를 논리적 데이터 모델을 이용해 논리적 구조로 표현  논리적 모델링(데이터 모델링)
일반적으로 관계 데이터 모델을 많이 이용
결과물
논리적 스키마 : 릴레이션 스키마
주요 작업
개념적 설계 단계의 결과물인 E-R 다이어그램을 릴레이션 스키마로 변환
릴레이션 스키마로 변환 후 속성의 데이터 타입, 길이, 널 값 허용 여부, 기본 값, 제약조건 등을 세부적으로 결정하고 결과를 문서화시킴


설계 3 단계 : 논리적 설계
E-R 다이어그램을 릴레이션 스키마로 변환하는 규칙(규칙 4~5를 적용할 상황은 잘 없다.)
규칙 1 : 모든 개체는 릴레이션으로 변환한다.
규칙 2 : 다대다(n:m) 관계는 릴레이션으로 변환한다.
규칙 3 : 일대다(1:n) 관계는 외래키로 표현한다.(1에 해당하는 키의 기본키를 n에 해당하는 테이블의 외래키로 넣는다)
규칙 4 : 일대일(1:1) 관계는 외래키로 표현한다.
규칙 5 : 다중 값 속성은 릴레이션으로 변환한다.
변환 규칙을 순서대로 적용하되, 해당되지 않는 규칙은 제외함



논리적 설계 – (규칙 1) 모든 개체는 릴레이션으로 변환한다
E-R 다이어그램의 각 개체를 하나의 릴레이션으로 변환
개체의 이름   릴레이션 이름
개체의 속성   릴레이션의 속성
개체의 키 속성   릴레이션의 기본키
개체의 속성이 복합 속성인 경우에는 복합 속성을 구성하고 있는 단순 속성만 릴레이션의 속성으로 변환


논리적 설계 – (규칙 2) 다대다 관계는 릴레이션으로 변환한다
E-R 다이어그램의 다대다 관계를 하나의 릴레이션으로 변환
관계의 이름   릴레이션 이름
관계의 속성   릴레이션의 속성
관계에 참여하는 개체를 규칙 1에 따라 릴레이션으로 변환한 후 이 릴레이션의 기본키를 관계 릴레이션에 포함시켜 외래키로 지정하고, 외래키들을 조합하여 관계 릴레이션의 기본키로 지정


논리적 설계 – (규칙 3) 일대다 관계는 외래키로 표현한다
E-R 다이어그램의 일대다 관계는 외래키로만 표현
(규칙 3-1) 일반적인 일대다 관계는 외래키로 표현한다.(중요)
일대다(1:n) 관계에서 1측 개체 릴레이션의 기본키를 n측 개체 릴레이션에 포함시켜 외래키로 지정
관계의 속성들도 n측 개체 릴레이션에 포함시킴
+)이 경우, 릴레이션으로 변환할 수 도 있다.


(규칙 3-2) 약한 개체가 참여하는 일대다 관계는 외래키를 포함해서 기본키로 지정한다.(약한개체 관련은 생략)


논리적 설계 – (규칙 4) 일대일 관계는 외래키로 표현한다
E-R 다이어그램의 일대일 관계는 외래키로만 표현

(규칙 4-1) 일반적인 일대일 관계는 외래키를 서로 주고받는다.(서로의 기본키를 외래키로 표현)
관계에 참여하는 개체 릴레이션들이 서로의 기본키를 주고받아 외래키로 지정
관계의 속성들도 모든 개체 릴레이션에 포함시킴
불필요한 데이터 중복이 발생할 수 있음


(규칙 4-2) 일대일 관계에 필수적으로 참여하는 개체의 릴레이션만 외래키를 받는다.
(규칙 4-2) 필수적으로 참여하는 개체 릴레이션만 외래키를 받는다.
관계에 필수적으로 참여하는 개체 릴레이션에만 외래키를 포함시킴
관계의 속성들은 관계에 필수적으로 참여하는 개체 릴레이션에 포함시킴


(규칙 4-3) 모든 개체가 일대일 관계에 필수적으로 참여하면 릴레이션 하나로 합친다.
(규칙 4-3) 모든 개체가 필수적으로 참여하면 릴레이션 하나로 합친다.
관계에 참여하는 개체 릴레이션들을 하나의 릴레이션으로 합쳐서 표현
관계의 이름을 릴레이션 이름으로 사용하고, 관계에 참여하는 두 개체의 속성들을 관계 릴레이션에 모두 포함시킴
두 개체 릴레이션의  키 속성을 조합하여 관계 릴레이션의 기본키로 지정




논리적 설계 - 테이블 명세서 작성
릴레이션 스키마 변환 후 속성의 데이터 타입과 길이, 널 값 허용 여부, 기본값, 제약조건 등을 세부적으로 결정하고 문서화시킴
테이블 명세서 : 릴레이션 스키마에 대한 설계 정보를 기술한 문서

            개인정보 취급 방칙이나 포인트 적립 정책처럼 정책적 측면과 운영적 측면을 함께 작성하는게 좋다ㅣ
+) 프로젝트할때 일을 내가 쓸거를 만든다는 마인드보다, 전혀 모르는 거를 수주해서 한다는 느낌으로 진행.




설계 4 단계 : 물리적 설계
하드웨어나 운영체제의 특성을 고려하여 필요한 인덱스 구조나 내부 저장 구조 등에 대한 물리적인 구조를 설계

설계 5 단계 : 구현
SQL로 작성한 명령문을 DBMS에서 실행하여 데이터베이스를 실제로 생성

















