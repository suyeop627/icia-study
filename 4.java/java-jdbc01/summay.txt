
JDBC(JavaDataBase Connectivity) 프로그래밍

JDBC : 자바프로그램과 DBMS를 연동하기 위한 라이브러리.
DB에 직접 접근하는 것이 아니라 DBMS(MySQL)와 네트워크로 연결하여 데이터 처리를 요청하고 결과를 응답받는 구조.

처리 단계
1. DBMS용 드라이버 로드
    - DB를 만드는 회사가 많아서, 하나의 표준화된 접근방식이 없다. 각 DB 회사에서 제공하는, 해당 제품에 맞는 드라이버를 설치에서 사용해야한다.
    third-part library : 제공자와 소비자의 관계가 아니라, 중간에 새로운 뭔가가 더 끼는거..? - 찾아서 정리

먼저, 자바와 mySQL드라이버(Connector j)를 프로젝트에 포함시켜야 한다.(MySQL을 developer pkg로 설정해서 설치했으면 connector j가 자동으로 설치된다.
C:\Program Files (x86)\MySQL\Connector J 8.0




+)connector j가 없다면, 실행 > mySQL Installer-Community 실행 > 우측 Add.. 클릭 >  MySQL Connector 에서 찾아서 받을 수 있다.

file - project structure > libraries > +버튼 > java > 먼저 확인했던 경로에 따라서 my-sql-connector-java-8.0.30.jar추가.
external libraries에 추가됨.

+) .jar 파일만 따로 접근하기 편한 위치에 옮겨놓고 사용할 수도 있다.


+) 새로운 프로젝트를 만들 때 마다 추가시켜야한다.
-----------------------------------------------

드라이버(jar)파일 프로젝트에 포함
1. file > Project Structure.. 실행
2. Libraries 선택
3. '+'버튼 클릭> 'Java' 선택
4. 외부 jar 파일의 위치 찾아서 포함.

참고 > Lombok 라이브러리 추가하기
Lombok은 클래스의 setter, getter, 생성자 등의 코드를 자동으로 생성해주는 라이브러리.
DTO(정보 객체)작성에 도움을 준다.
Lombok을 사용하려면 먼저 lombok 플러그인이 개발도구에 설치되어 있어야하며 (IntelliJ는 자동으로 설치되어 있음),
lombok.jar 파일을 프로젝트에 포함시켜 줘야 한다.

https://projectlombok.org/download


2. 드라이버를 통한 DBMS접속 (IP, 계정, 비밀번호)
3. 요청 및 응답 처리
4. 접속해제

데이터베이스 설계 - 테이블 구축까지는 워크벤치로.
CRUD 작업은 프로그램에서 진행됨.


+) 탐색창>옵션>폴더옵션>숨김파일 표시 / 알려진 파일 형식의 파일 확장명 숨기기 체크 해제 해놓는게 파일 구분하기 편함. 참고용.



-------------

SQL 쿼리문 실행 객체 Statement(PreparedStatement)

insert update delete 등은 몇 건을 성공했다 정도로만 알 수 있음
select를 하면 여러 행 또는 컬럼으로 받을 수 있는데, 집합의형식이다. (테이블 형식)


SQL 실행 결과 집합 저장 객체 ResultSet

/*
Statement에서 문자열 입력하려면 ""안에 ''를 넣어서 문자열임을 나타내야 한다.
이런 불편함을 방지하기 위해 preparedStatement가 있음.
  PreparedStatement pstmt; 의 자식클래스로 편의성을 높인 클래스이다.

 쿼리 문장에서 사용자의 입력값이 위치하는 곳에 '?'작성, PreparedStatement의 메소드인 setString으로 ?위치에 들어갈 값을 제공한다.

 */





















