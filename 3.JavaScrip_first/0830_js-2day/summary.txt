


변수명(식별자) 작성규칙(함수명도 같은 규칙 적용)
- a~z, A~Z, '_', '$'만 사용 가능
- 숫자로 시작 불가
- 사이에 공백 불가(공백 대신 카멜케이스 사용 권장)
- 키워드 불가(교재 70페이지)
- 대소문자 구분

교재 70p 변수명으로 사용할 수 없는 '키워드' 확인
-대소문자를 구분해서 작성할 수는 있지만, 혼동의 여지가 있으므로 변수명으로 사용하지 말 것.

변수 사용법
1. 변수 선언
2. 변수 초기화 또는 데이터(값) 대입
3. 변수활용(저장한 데이터 활용)

memory - 프로그램은 메모리에서 실행됨.
hdd - 프로그램은 보조기억장치에 저장됨\

laod - hdd에 저장된 프로그램이 실행되기 위해, memory로 적재되는 것

프로세스 - 실행중인 프로그램


변수 선언
- 변수 선언 키워드 :var , let
문법 ) 키워드 변수명;

var와 let의 차이 : code의 작성량이 많아질 경우, 변수명을 중복선언하거나 헷갈릴 수 있음 
                - let은 중복선언이 불가하므로, 작성시 확인 가능(중복 선언시 에러 출력 - Uncaught SyntaxError: Identifier 'someLet' has already been declared)
                
var는 중복 선언이 가능(좋지않다.)
let은 중복 선언이 불가(let을 주로 쓰자)



1. 인라인 : html 요소의 이벤트 속성(예, onClick 등)에 직접 작성
2. 문서 내부 : <script> 태그에 작성(</body>아래에 <script></scrip> 작성) - 만약, <body>안과 밖에 각각 <script>를 적었어도, 두 구간의 script는 서로 이어져있다.
3. 문서 외부 : xxx.js파일을 작성하여 문서에 포함


함수(function)
-한가지 특별한 목적의 작업을 수행하도록 묶여있는 문장의 집합

함수의 사용 역역(scope)에 따른 분류
1. 전역변수(Global Variable) - 함수 밖에서 선언한 변수 (프로그램 전체가 종료될 때까지 유지)
2. 지역변수(Local Variable) - 함수 안에서 선언한 변수 (scope 내에서 함수가 종료될 때 제거)


예제)
1.버튼을 눌러서 오늘의 날짜 출력하기
2.버튼을 눌러서 숫자가 증가/감소하는 카운터 만들기

상수(const)
값을 저장하는 공간이지만, 최초에 한번 값이 저장되며, 그 값을 변경할 수 없는 공간. 초기화가 반드시 필요함

변수에 저장된 데이터의 타입을 확인 -> typeof
->typeof(표현식);

자바스크립트의 변수는 고정된 타입이 아니기 때문에 사용(실행)중에 타입이 변경될 수 있음
때에 따라서 타입을 확인하여 처리할 필요가 있음.


