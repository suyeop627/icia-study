--------------------application.properties﻿--------------------

#jsp setting
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

#static resource
spring.web.resources.static-locations=classpath:static/

#DB setting
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy

spring.datasource.url=jdbc:log4jdbc:mysql://127.0.0.1:3306/datadb
spring.datasource.username=dev01
spring.datasource.password=12341234

#MyBatis setting
mybatis.type-aliases-package=com.jsframe.spr_jdbc2.dto
mybatis.mapper-locations=classpath:mappers/*.xml

#live Reload
spring.devtools.livereload.enabled=true
spring.devtools.remote.restart.enabled=false

#thymeleaf setting
spring.thymeleaf.cache=false


#jpa setting
spring.jpa.database=mysql
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=update





#DB setting
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy

# serverTimezone=Asia/Seourl - mysql에서 시간관련 오류가 발생하는 것을 방지한다.(서울의 시간을 받아서 처리하도록한다.)
spring.datasource.url=jdbc:log4jdbc:mysql://127.0.0.1:3306/board_db?serverTimezone=Asia/Seoul
spring.datasource.username=dev02
spring.datasource.password=12341234

#live Reload
spring.devtools.livereload.enabled=true
spring.devtools.remote.restart.enabled=false

#thymeleaf setting
spring.thymeleaf.cache=false

#jpa setting
spring.jpa.database=mysql
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=update

#file upload setting
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=25MB
﻿﻿--------------------dependencies﻿--------------------

        <!-- jstl -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>

        <!-- tomcat-->
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
        </dependency>

        <!-- log4jdbc-->
        <dependency>
            <groupId>org.bgee.log4jdbc-log4j2</groupId>
            <artifactId>log4jdbc-log4j2-jdbc4.1</artifactId>
            <version>1.16</version>
        </dependency>

        <!-- junit-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- spring security -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
        </dependency>

﻿﻿--------------------log4jdbc.log4j2.properties﻿--------------------

log4jdbc.log4j2.properties

log4jdbc.spylogdelegator.name=net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator
log4jdbc.dump.sql.maxlinelength=0

------------------------logback.xml----------------------------------------

<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<Pattern>%d{HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n</Pattern>
		</encoder>
	</appender>
	<logger name="com.example.board" level="debug" />
	<!-- 테이블에 결과를 출력하기 위해서 info 대신 trace설정 -->
	<logger name="jdbc.resultsettable" level="info" />
	<logger name="jdbc.audit" level="off" />
	<logger name="jdbc.resultset" level="off" />
	<logger name="jdbc.sqlonly" level="debug" />
	<logger name="jdbc.sqltiming" level="off" />
	<logger name="jdbc.connection" level="off" />
	<root level="off">
		<appender-ref ref="console" />
	</root>
</configuration>








