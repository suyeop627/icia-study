JSP (front-end) + Spring boot(back-end)

Jsp = HTML + java


JSP를 사용하기 위한 설정
1.pom.xml라이브러리 추가
    tomcat-embed-jasper : 내장형 웹 서버 (서버가 먼저 동작해야, 프로그램도 실행할 수 있다.)
    jstl : java 코드를 쉽게 처리하기 위한 라이브러리
    mvnrepository.com 에서 검색.

2. jsp 저장 폴더 생성
main > webapp > WEB-INF > views

3. application.properties 설정
  # JSP 설정
    spring.mvc.view.prefix=/WEB-INF/views/
    spring.mvc.view.suffix=.jsp
부트 관련은 오른쪽 아이콘에서 파일안에 원이 그려져 있음


JSP Spring boot 프로젝트 생성
1. New > Project
2. Name : 프로젝트 명 작성
3. Group : com.jsframe  (->나중에는 실제 프로젝트 팀명으로 작성)
4. java : 11로 변경(설치된 JDK 버전과 맞춤)
5.Packaging : War로 변경
>Next
6. Dependencies :
    Developer Tools > Lombok
    Web > Spring Web
    위 두가지를 찾아서 체크
 create


프로젝트 기본 설정
pom.xml열기 > 라이브러리 포함
    tomchat - embed - jasper
    jstl
    mvnrepository.com에서 검색하여 가져옴

빌더(Builder)
자바코드를 기계어로 변환하고, 프로그램 실행에 필요한 라이브러릴르 프로젝트에 포함하여 최종적으로 프로그램을 완성시키는 도구.

+) resources : 코드 외의 자료들이 들어가는 공간

프로젝트 JSP 설정
1. views 폴더 생성
    main > webapp > WEB-INF > views
2. application.properties 파일에 jsp 설정
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

이 후 작업
1. jsp 파일 작성
2. controller 작성







빌더 종류
1.Maven : 종속성 처리 시 text 문서를 활용 pom.xml파일에 종속 설정
2.Gradle : 종속성 처리 시 text 문서를 활용.build.gradle 파일에 종속 설정

종속성 처리 = 외부 라이브러리를 포함하는 작업




    오늘의 과제 - spring 프로젝트 10개 만들기.




















