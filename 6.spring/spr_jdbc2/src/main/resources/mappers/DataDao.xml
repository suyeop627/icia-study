<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jsframe.spr_jdbc2.dao.DataDao">

    <!--    메서드에 parameter가 있을 경우, parameterType을 추가로 작성한다.-->
    <!--    mybatis.type-aliases-package=com.jsframe.spr_jdbc.dto에서 설정했기 때문에,-->
    <!--     com.jsframe.spr_jdbc.dto.DataDto의 앞의 경로를 생략한 DataDto만 작성할 수 있다..-->
    <!--   변수에 담긴 값을 insert 할땐, #{변수명}의 형식으로 작성한다.-->



    <insert id="insertData" parameterType="DataDto">
    INSERT INTO datatbl
--     DB의 컬럼 순서대로 작성
    VALUES (null, #{m_str}, #{m_int},#{m_date})
    </insert>

    <update id="updateData" parameterType="DataDto">
        UPDATE datatbl
        SET m_str=#{m_str}, m_int=#{m_int}, m_date=#{m_date}
        WHERE m_code=#{m_code}
    </update>
    <delete id="deleteData" parameterType="integer">
        DELETE FROM datatbl WHERE m_code=#{code}
    </delete>

    <!--    프로그램에서는 List<String> strList로 한다면, MyBatis의 resultType은 String으로 작성한다. -->
    <select id="selectList" resultType="com.jsframe.spr_jdbc2.dto.DataDto">
        SELECT * FROM datatbl
    </select>
    <select id="selectData" resultType="com.jsframe.spr_jdbc2.dto.DataDto" parameterType="integer">
        SELECT * FROM datatbl WHERE m_code = #{code}
    </select>
</mapper>